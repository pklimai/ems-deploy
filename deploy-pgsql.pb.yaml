---
- name: Deploy PostgreSQL on Event Catalogue hosts
  hosts: event_catalogue
  become: yes

  tasks:

  - name: Install packages
    dnf: "name={{ item }} state=present"
    with_items:
      - postgresql
      - postgresql-server

  - name: Install Python packages
    pip: "name={{ item }}  state=present"
    with_items:
      - psycopg2-binary

  - name: Check if PostgreSQL is initialized
    ansible.builtin.stat:
      path: "/var/lib/pgsql/data/pg_hba.conf"
    register: postgres_data

  - name: Initialize PostgreSQL
    command: "postgresql-setup initdb"
    when: not postgres_data.stat.exists

  - name: Start and enable services
    service: "name={{ item }} state=started enabled=yes"
    with_items:
      - postgresql

  - name: Set password for Linux 'postgres' user
    ansible.builtin.user:
      name: postgres
      password: "{{ postgres_hashed_password }}"

  - name: Set password for database 'postgres' user
    become: yes
    become_user: postgres
    postgresql_user:
      db: postgres
      name: postgres
      password: "{{ psql_password }}"
      login_password: "{{ psql_password }}"    # Needed when run second time

  - name: Add configuration to pg_hba.conf
    blockinfile:
      dest: /var/lib/pgsql/data/pg_hba.conf
      insertafter: 
        "# TYPE  DATABASE        USER            ADDRESS                 METHOD"
      block: |
        local   all             all             	                   md5
        host    all             all             0.0.0.0/0                md5
        host    replication     postgres        0.0.0.0/0                password
    register: result_pg_hba

  - name: Add configuration to postgresql.conf
    blockinfile:
      dest: /var/lib/pgsql/data/postgresql.conf
      block: |
        listen_addresses = '*'
    register: result_postgresql_conf

  - name: Restart postgres if configs changed
    service: 
      name: postgresql 
      state: restarted
    when: result_pg_hba.changed or result_postgresql_conf.changed

################################################################################################

- name: Enable replication on Event Catalogue backup host
  hosts: event_catalogue_backup
  become: yes

  tasks:

  - name: Stop postgresql service
    service:
      name: postgresql
      state: stopped
  
  - name: Clean data directory, leaving the directory itself
    shell: "/bin/rm -rf /var/lib/pgsql/data/*"

  - name: Create .pgpass file for pg_basebackup
    become_user: postgres
    copy:
      dest: ~/.pgpass
      mode: "700"
      content: |
          *:*:*:postgres:{{ psql_password }}

  - name: Figure out master server IP address
    set_fact:
      master_ip: "{{ hostvars[ groups['event_catalogue_master'][0] ]['ansible_host'] }}"

  - name: Enable replication
    become_user: postgres
    command: "pg_basebackup -h {{ master_ip }} -p 5432 -U postgres -D /var/lib/pgsql/data/ -Fp -Xs -R"

  - name: Start postgresql service
    service:
      name: postgresql
      state: started

  # Seems that we need to keep the file.
  # - name: Remove .pgpass file
  #   become_user: postgres
  #   file: 
  #     path: ~/.pgpass
  #     state: absent

################################################################################################

- name: Create event database 
  hosts: event_catalogue_master
  # (should replicate to backup in HA scenario)
  become: yes
   
  tasks:

  - name: Ensure Event Catalogue database is created
    postgresql_db: 
      name: "{{ event_catalogue_db_name }}"
      login_password: "{{ psql_password }}"

  - name: Upload SQL script file
    copy:
      src: files/schema.sql
      dest: /var/tmp/schema.sql

  - name: Apply SQL schema file
    community.postgresql.postgresql_script:
      db: "{{ event_catalogue_db_name }}"
      path: /var/tmp/schema.sql
      login_password: "{{ psql_password }}"  

