---
- name: Deploy PostgreSQL on Event Catalogue hosts
  hosts: event_catalogue
  become: yes

#  vars_files:
#    - vars.yml

  tasks:
    - name: Install packages
      dnf: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: Install Python packages
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary

    - name: Check if PostgreSQL is initialized
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: Initialize PostgreSQL
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: Start and enable services
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: Set password Linux user
      ansible.builtin.user:
        name: postgres
        password: $6$VsaRMZ7Zzj3Mb1ux$Nc6pKq0aQD5CZ74yAGKmRt2fSftOJfNhYF/YJEiSRwYiLJ/BlqjEHZkqNXneuCuEJwpw2Y/qbEAPQnx7itnXX.
  
    # Is it needed ?
    - name: Set password for postgres user
      become: yes
      become_method: su
      become_user: postgres
      vars:
        ansible_become_password: example
      postgresql_user:
        db: postgres
        name: postgres
        password: example
        login_user: postgres
        login_password: example 

    - name: Add configuration to pg_hba.conf
      blockinfile:
        dest: /var/lib/pgsql/data/pg_hba.conf
        insertafter: 
          "# TYPE  DATABASE        USER            ADDRESS                 METHOD"
        block: |
          local   all             all             	                   md5
          host    all             all             0.0.0.0/0                md5
          host    replication     replicant       0.0.0.0/0                md5

    - name: Add new configuration to postgresql.conf
      blockinfile:
        dest: /var/lib/pgsql/data/postgresql.conf
        block: |
          listen_addresses = '*'

    - name: Restart postgres
      service: "name={{ item }} state=restarted"
      with_items:
        - postgresql

    - name: Create new database
      postgresql_db: 
        name: event_db
        login_password: example

#  handlers:
#    - name: restart postgres
#      service: name=postgresql state=restarted

- name: Play for EMS master db
  hosts: event_catalogue_master
  

