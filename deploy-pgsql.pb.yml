---
- hosts: all
  become: yes

#  vars_files:
#    - vars.yml

  pre_tasks:
    - name: "Install packages"
      dnf: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: "Install Python packages"
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary

  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=yes"
      with_items:
        - postgresql

    - name: Set password Linux user
      ansible.builtin.user:
        name: postgres
        password: $6$VsaRMZ7Zzj3Mb1ux$Nc6pKq0aQD5CZ74yAGKmRt2fSftOJfNhYF/YJEiSRwYiLJ/BlqjEHZkqNXneuCuEJwpw2Y/qbEAPQnx7itnXX.
  
    # Is it needed ?
    - name: Set password for postgres user
      become: yes
      become_method: su
      become_user: postgres
      vars:
        ansible_become_password: example
      postgresql_user:
        db: postgres
        name: postgres
        password: example
        login_user: postgres
        login_password: example 

    # TODO: Enable listen '*' -- not needed for Ansible, but needed for EMS later

    # Enable in pg_hba.conf (replace peer with password):
    # sudo vi /var/lib/pgsql/data/pg_hba.conf
    # add as FIRST rule: 
    # local   all             postgres                                md5
    # sudo systemctl restart postgresql 

    - name: add new configuration to "pg_hba.conf"
      blockinfile:
        dest: /var/lib/pgsql/data/pg_hba.conf
        insertafter: "# TYPE  DATABASE        USER            ADDRESS                 METHOD"
        block: |
          local   all             all             	                   md5
          host    all             all             0.0.0.0/0                md5
          host    replication     replicant       0.0.0.0/0                md5
      #notify: restart postgres

    - name: "Restart postgres"
      service: "name={{ item }} state=restarted"
      with_items:
        - postgresql

    - postgresql_db: 
        name: event_db
        login_password: example


  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

- hosts: event_catalogue_master
  

